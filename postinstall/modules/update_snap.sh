#!/usr/bin/env bash
################################################################################
# update_snap.sh
#
# Description :
# Ce module g√®re la mise √† jour et l‚Äôinstallation des paquets Snap :
# - Lit les snaps list√©s dans config/snap_packages.list
# - Tente de stopper les applications Snap actives correspondantes
# - Rafra√Æchit les snaps install√©s (snap refresh)
# - Installe les snaps manquants avec options √©ventuelles
# Toutes les op√©rations sont idempotentes et pilot√©es par configuration.
#
# Auteur : Alan MARCHAND
#
# Usage :
# Ce script doit √™tre sourc√© depuis un script principal (ex. build.sh).
# Ne pas l'ex√©cuter directement en CLI.
################################################################################

# -----------------------------------------------------------------------------
# V√©rification : ce module doit √™tre sourc√©, pas ex√©cut√© directement
# -----------------------------------------------------------------------------
[[ "${BASH_SOURCE[0]}" == "${0}" ]] && {
  echo "Ce script doit √™tre sourc√©, pas ex√©cut√© directement." >&2
  return 1 2>/dev/null || exit 1
}

################################################################################
# update_snap : Met √† jour les snaps et installe ceux list√©s dans le fichier
# Source de configuration : ${SCRIPT_DIR}/config/snap_packages.list
################################################################################
update_snap() {
  local list_file="${SCRIPT_DIR}/config/snap_packages.list"

  log_info "Mise √† jour des paquets Snap..."

  if [[ ! -f "${list_file}" ]]; then
    log_warning "Fichier introuvable : ${list_file}. Aucun snap trait√©."
    return 0
  fi

  # √âtape 1 : Tentative d'arr√™t des applications Snap list√©es
  log_debug "Tentative d'arr√™t des applications Snap list√©es dans ${list_file}"

  while read -r line; do
    [[ -z "${line}" || "${line}" =~ ^# ]] && continue
    local snap_name=$(awk '{print $1}' <<< "${line}")

    pkill "${snap_name}" >/dev/null 2>&1 \
      && log_debug "Snap interactif stopp√© : ${snap_name}" \
      || log_debug "Snap ${snap_name} non actif ou d√©j√† ferm√©."
  done < "${list_file}"

  # üîÑ √âtape 2 : Mise √† jour globale des snaps
  if [[ "${DEBUG:-}" == "true" ]]; then
    log_debug "Commande ex√©cut√©e : snap refresh"
  fi
  if ! snap refresh; then
    log_warning "√âchec ou probl√®me lors de snap refresh."
  fi

  # üì¶ √âtape 3 : Installation des snaps configur√©s
  while read -r line; do
    [[ -z "${line}" || "${line}" =~ ^# ]] && continue

    local snap_name option
    snap_name=$(awk '{print $1}' <<< "${line}")
    option=$(awk '{$1=""; print $0}' <<< "${line}" | xargs)

    if snap list | grep -q "^${snap_name}[[:space:]]"; then
      log_debug "Snap d√©j√† install√© : ${snap_name}. Ignor√©."
      continue
    fi

    log_info "installation du package ${snap_name} ${option} en cours"

    if [[ "${DEBUG:-}" == "true" ]]; then
      log_debug "Commande ex√©cut√©e : snap install ${snap_name} ${option}"
    fi

    if ! snap install "${snap_name}" ${option}; then
      log_warning "√âchec de l'installation : ${snap_name} ${option}"
    else
      log_success "Snap install√© : ${snap_name} ${option}"
    fi
  done < "${list_file}"

  log_info "Mise √† jour des snaps termin√©e."
  return 0
}
